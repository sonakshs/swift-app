import { MDCSelect } from '@material/select/';
import MaterialComponent from '../Base/MaterialComponent';
export interface ISelectOptionProps {
    disabled?: boolean;
    selected?: boolean;
}
export interface ISelectOptionState {
}
export declare class SelectOption extends MaterialComponent<ISelectOptionProps, ISelectOptionState> {
    protected componentName: string;
    protected mdcProps: never[];
    protected materialDom(props: any): JSX.Element;
}
export interface ISelectProps {
    disabled?: boolean;
    box?: boolean;
    outlined?: boolean;
    hintText?: string;
    selectedIndex?: number;
    name?: string;
    onChange?: (e: Event & {
        target: EventTarget & {
            selectedIndex: number;
        };
    }) => void;
}
export interface ISelectState {
}
export declare class Select extends MaterialComponent<ISelectProps, ISelectState> {
    MDComponent?: MDCSelect;
    protected componentName: string;
    protected mdcProps: string[];
    protected labelRef?: Element;
    componentDidMount(): void;
    componentWillUnmount(): void;
    componentDidUpdate(): void;
    protected onChanged(e: any): void;
    protected updateSelection(): void;
    protected materialDom(allprops: any): JSX.Element;
}
export default class extends Select {
    static readonly Item: typeof SelectOption;
}
