import { MDCTabBar, MDCTabBarScroller } from '@material/tabs';
import MaterialComponent from '../Base/MaterialComponent';
export interface ITabBarScrollerProps {
    activeTabIndex?: number;
}
export interface ITabBarScrollerState {
}
export declare class TabBarScroller extends MaterialComponent<ITabBarScrollerProps, ITabBarScrollerState> {
    MDComponent?: MDCTabBarScroller;
    protected componentName: string;
    protected mdcProps: never[];
    componentDidMount(): void;
    componentWillUnmount(): void;
    componentWillReceiveProps(nextProps: ITabBarScrollerProps): void;
    protected materialDom(props: any): JSX.Element;
}
export interface ITabBarScrollerTabsProps {
    'icon-tab-bar'?: boolean;
    'icons-with-text'?: boolean;
}
export interface ITabBarScrollerTabsState {
}
export declare class TabBarScrollerTabs extends MaterialComponent<ITabBarScrollerTabsProps, ITabBarScrollerTabsState> {
    protected componentName: string;
    protected mdcProps: string[];
    protected materialDom({ className, ...props }: {
        [x: string]: any;
        className: any;
    }): JSX.Element;
}
export interface ITabProps {
    active?: boolean;
}
export interface ITabState {
}
export declare class Tab extends MaterialComponent<ITabProps, ITabState> {
    protected componentName: string;
    protected mdcProps: string[];
    protected materialDom(props: any): JSX.Element;
}
export interface IIconLabelProps {
}
export interface IIconLabelState {
}
export declare class TabIconLabel extends MaterialComponent<IIconLabelProps, IIconLabelState> {
    protected componentName: string;
    protected mdcProps: never[];
    protected materialDom(props: any): JSX.Element;
}
export interface ITabsProps {
    'icon-tab-bar'?: boolean;
    'icons-with-text'?: boolean;
    activeTabIndex?: number;
}
export interface ITabsState {
}
export declare class Tabs extends MaterialComponent<ITabsProps, ITabsState> {
    static readonly TabBarScroller: typeof TabBarScroller;
    static readonly TabBarScrollerTabs: typeof TabBarScrollerTabs;
    static readonly Tab: typeof Tab;
    static readonly TabIconLabel: typeof TabIconLabel;
    MDComponent?: MDCTabBar;
    protected componentName: string;
    protected mdcProps: string[];
    protected mdcNotifyProps: string[];
    componentDidMount(): void;
    componentWillUnmount(): void;
    protected materialDom(props: any): JSX.Element;
}
export default Tabs;
