import { MDCTabBar } from '@material/tab-bar';
import MaterialComponent from '../Base/MaterialComponent';
export interface ITabLabelProps {
}
export interface ITabLabelState {
}
export declare class TabLabel extends MaterialComponent<ITabLabelProps, ITabLabelState> {
    protected componentName: string;
    protected mdcProps: never[];
    protected materialDom(props: any): JSX.Element;
}
export interface ITabIconProps {
}
export interface ITabIconState {
}
export declare class TabIcon extends MaterialComponent<ITabIconProps, ITabIconState> {
    protected componentName: string;
    protected mdcProps: never[];
    protected materialDom(props: any): JSX.Element;
}
export interface ITabProps {
    active?: boolean;
}
export interface ITabState {
}
export declare class Tab extends MaterialComponent<ITabProps, ITabState> {
    protected componentName: string;
    protected mdcProps: string[];
    protected mdcNotifyProps: string[];
    protected materialDom(props: any): JSX.Element;
}
export interface ITabsProps {
    activeTabIndex?: number;
}
export interface ITabsState {
}
export declare class TabBar extends MaterialComponent<ITabsProps, ITabsState> {
    MDComponent?: MDCTabBar;
    protected componentName: string;
    protected mdcProps: never[];
    protected mdcNotifyProps: string[];
    componentDidMount(): void;
    componentWillUnmount(): void;
    protected materialDom(props: any): JSX.Element;
}
export default class extends TabBar {
    static readonly Tab: typeof Tab;
    static readonly TabLabel: typeof TabLabel;
    static readonly TabIcon: typeof TabIcon;
}
