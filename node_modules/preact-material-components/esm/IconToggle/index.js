var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { MDCIconToggle } from '@material/icon-toggle/';
import { bind } from 'bind-decorator';
import { h } from 'preact';
import MaterialComponent from '../Base/MaterialComponent';
export class IconToggle extends MaterialComponent {
    constructor() {
        super(...arguments);
        this.componentName = 'icon-toggle';
        this.mdcProps = ['disabled'];
    }
    componentDidMount() {
        super.componentDidMount();
        if (this.control) {
            this.MDComponent = new MDCIconToggle(this.control);
            this.MDComponent.listen('MDCIconToggle:change', this.onChange);
        }
    }
    componentWillUnmount() {
        super.componentWillUnmount();
        if (this.MDComponent) {
            this.MDComponent.unlisten('MDCIconToggle:change', this.onChange);
            this.MDComponent.destroy();
        }
    }
    onChange(e) {
        if (this.props.onChange) {
            this.props.onChange(e);
        }
    }
    materialDom(props) {
        if (props['data-toggle-on']) {
            props['data-toggle-on'] = JSON.stringify(props['data-toggle-on']);
        }
        if (props['data-toggle-off']) {
            props['data-toggle-off'] = JSON.stringify(props['data-toggle-off']);
        }
        return (h("i", Object.assign({}, props, { className: "material-icons", ref: this.setControlRef }), props.children));
    }
}
__decorate([
    bind
], IconToggle.prototype, "onChange", null);
export default IconToggle;
//# sourceMappingURL=index.js.map