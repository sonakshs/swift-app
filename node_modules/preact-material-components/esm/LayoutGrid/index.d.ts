import { VNode } from 'preact';
import MaterialComponent from '../Base/MaterialComponent';
export interface ILayoutGridInnerProps {
}
export interface ILayoutGridInnerState {
}
export declare class LayoutGridInner extends MaterialComponent<ILayoutGridInnerProps, ILayoutGridInnerState> {
    protected componentName: string;
    protected mdcProps: never[];
    protected materialDom(props: any): JSX.Element;
}
declare type PhoneCols = 1 | 2 | 3 | 4;
declare type TabletCols = PhoneCols | 5 | 6 | 7 | 8;
declare type LayoutCols = TabletCols | 9 | 10 | 11 | 12;
export interface ILayoutGridCellProps {
    cols?: LayoutCols;
    desktopCols?: LayoutCols;
    tabletCols?: TabletCols;
    phoneCols?: PhoneCols;
    order?: LayoutCols;
    align?: 'top' | 'middle' | 'bottom';
}
export interface ILayoutGridCellState {
}
export declare class LayoutGridCell extends MaterialComponent<ILayoutGridCellProps, ILayoutGridCellState> {
    protected static readonly propsDict: {
        align: string;
        cols: string;
        desktop: string;
        order: string;
        phone: string;
        tablet: string;
    };
    protected static createClassName(props: any): string;
    protected componentName: string;
    protected mdcProps: never[];
    render(props: any): VNode;
    protected materialDom(props: any): JSX.Element;
}
export interface ILayoutGridProps {
}
export interface ILayoutGridState {
}
export declare class LayoutGrid extends MaterialComponent<ILayoutGridProps, ILayoutGridState> {
    protected componentName: string;
    protected mdcProps: never[];
    protected materialDom(props: any): JSX.Element;
}
export default class extends LayoutGrid {
    static readonly Cell: typeof LayoutGridCell;
    static readonly Inner: typeof LayoutGridInner;
}
export {};
