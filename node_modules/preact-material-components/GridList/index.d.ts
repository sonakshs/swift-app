import MaterialComponent from '../Base/MaterialComponent';
import Icon from '../Icon';
export interface IGridListTilesProps {
}
export interface IGridListTilesState {
}
export declare class GridListTiles extends MaterialComponent<IGridListTilesProps, IGridListTilesState> {
    protected componentName: string;
    protected mdcProps: never[];
    protected materialDom(props: any): JSX.Element;
}
export interface IGridListTileProps {
}
export interface IGridListTileState {
}
export declare class GridListTile extends MaterialComponent<IGridListTileProps, IGridListTileState> {
    protected componentName: string;
    protected mdcProps: never[];
    protected materialDom(props: any): JSX.Element;
}
export interface IGridListPrimaryTileProps {
}
export interface IGridListPrimaryTileState {
}
export declare class GridListPrimaryTile extends MaterialComponent<IGridListPrimaryTileProps, IGridListPrimaryTileState> {
    protected componentName: string;
    protected mdcProps: never[];
    protected materialDom(props: any): JSX.Element;
}
export interface IGridListPrimaryContentTileProps {
    src: string;
}
export interface IGridListPrimaryContentTileState {
}
export declare class GridListPrimaryContentTile extends MaterialComponent<IGridListPrimaryContentTileProps, IGridListPrimaryContentTileState> {
    protected componentName: string;
    protected mdcProps: never[];
    protected materialDom(allprops: any): JSX.Element;
}
export interface IGridListSecondaryTileProps {
}
export interface IGridListSecondaryTileState {
}
export declare class GridListSecondaryTile extends MaterialComponent<IGridListSecondaryTileProps, IGridListSecondaryTileState> {
    protected componentName: string;
    protected mdcProps: never[];
    protected materialDom(props: any): JSX.Element;
}
export interface IGridListTitleTileProps {
}
export interface IGridListTitleTileState {
}
export declare class GridListTitleTile extends MaterialComponent<IGridListTitleTileProps, IGridListTitleTileState> {
    protected componentName: string;
    protected mdcProps: never[];
    protected materialDom(props: any): JSX.Element;
}
export interface IGridListSupportTextTileProps {
}
export interface IGridListSupportTextTileState {
}
export declare class GridListSupportTextTile extends MaterialComponent<IGridListSupportTextTileProps, IGridListSupportTextTileState> {
    protected componentName: string;
    protected mdcProps: never[];
    protected materialDom(props: any): JSX.Element;
}
declare class GridListIconTile extends Icon {
    protected componentName: string;
}
export interface IGridListProps {
    'tile-gutter-1'?: boolean;
    'header-caption'?: boolean;
    'twoline-caption'?: boolean;
    'with-icon-align'?: 'start' | 'end';
    'tile-aspect'?: '1x1' | '16x9' | '2x3' | '3x2' | '4x3' | '3x4';
}
export interface IGridListState {
}
export declare class GridList extends MaterialComponent<IGridListProps, IGridListState> {
    protected static validationValuesByKey: {
        'tile-aspect': string[];
        'with-icon-align': string[];
    };
    protected componentName: string;
    protected mdcProps: string[];
    protected isValidValue(validationValues: any, testValue: any): boolean;
    protected mapClassName(propKey: any, props: any): string;
    protected materialDom(props: any): JSX.Element;
}
export default class extends GridList {
    static readonly Tiles: typeof GridListTiles;
    static readonly Tile: typeof GridListTile;
    static readonly PrimaryTile: typeof GridListPrimaryTile;
    static readonly PrimaryContentTile: typeof GridListPrimaryContentTile;
    static readonly SecondaryTile: typeof GridListSecondaryTile;
    static readonly TitleTile: typeof GridListTitleTile;
    static readonly SupportTextTile: typeof GridListSupportTextTile;
    static readonly IconTile: typeof GridListIconTile;
}
export {};
