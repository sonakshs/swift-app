var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { MDCDialog } from '@material/dialog';
import { MaterialComponent } from '@preact-material-components/base/lib/MaterialComponent';
import { bind } from 'bind-decorator';
import { h } from 'preact';
export class Dialog extends MaterialComponent {
    constructor() {
        super(...arguments);
        this.componentName = 'dialog';
        this.mdcProps = [];
    }
    componentDidMount() {
        super.componentDidMount();
        if (this.control) {
            this.MDComponent = new MDCDialog(this.control);
            this.MDComponent.listen('MDCDialog:accept', this.onAccept);
            this.MDComponent.listen('MDCDialog:cancel', this.onCancel);
        }
    }
    componentWillUnmount() {
        super.componentWillUnmount();
        if (this.MDComponent) {
            this.MDComponent.unlisten('MDCDialog:accept', this.onAccept);
            this.MDComponent.unlisten('MDCDialog:cancel', this.onCancel);
            this.MDComponent.destroy();
        }
    }
    onAccept(e) {
        if (this.props.onAccept) {
            this.props.onAccept(e);
        }
    }
    onCancel(e) {
        if (this.props.onCancel) {
            this.props.onCancel(e);
        }
    }
    materialDom(props) {
        return (h("aside", Object.assign({ role: 'alertdialog', ref: this.setControlRef }, props),
            h("div", { className: "mdc-dialog__surface" }, props.children),
            h("div", { className: "mdc-dialog__backdrop" })));
    }
}
__decorate([
    bind
], Dialog.prototype, "onAccept", null);
__decorate([
    bind
], Dialog.prototype, "onCancel", null);
//# sourceMappingURL=index.js.map