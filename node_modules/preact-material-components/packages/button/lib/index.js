import { generateThemeClass } from '@preact-material-components/base';
import { MaterialComponent } from '@preact-material-components/base/lib/MaterialComponent';
import { ButtonIcon } from './icon';
import { h } from 'preact';
export class Button extends MaterialComponent {
    constructor() {
        super(...arguments);
        this.componentName = 'button';
        this.mdcProps = ['dense', 'raised', 'unelevated', 'outlined'];
        this.themeProps = ['primary', 'secondary'];
    }
    materialDom(props) {
        const ButtonElement = props.href ? 'a' : 'button';
        let className = '';
        this.themeProps.forEach(themeProp => {
            if (themeProp in props && props[themeProp] !== false) {
                className += generateThemeClass(themeProp) + ' ';
            }
        });
        return (h(ButtonElement, Object.assign({ ref: this.setControlRef }, props, { className: className }),
            props.icon && h(ButtonIcon, null, props.icon),
            h("span", { class: "mdc-button__label" }, this.props.children)));
    }
}
//# sourceMappingURL=index.js.map