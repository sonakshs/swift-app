var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
import { Component, h } from 'preact';
import { HelperText } from './helper-text';
import { TextFieldInput } from './input';
export class TextField extends Component {
    constructor() {
        super(...arguments);
        this.id = TextField.uid();
    }
    static uid() {
        return ++this.uidCounter;
    }
    componentDidMount() {
        this.setState({
            jsComponentAttached: true
        });
    }
    render(allprops) {
        const { className, outerStyle, helperTextPersistent, helperTextValidationMsg } = allprops, props = __rest(allprops, ["className", "outerStyle", "helperTextPersistent", "helperTextValidationMsg"]);
        const showDiv = props.helperText;
        if ((props.helperText || props.label) && !props.id) {
            props.id = `tf-${this.id}`;
        }
        // Helper text
        const helperTextProps = {
            persistent: helperTextPersistent,
            'validation-msg': helperTextValidationMsg
        };
        return showDiv ? (h("div", { className: className, style: outerStyle },
            h(TextFieldInput, Object.assign({}, props, { onInit: MDComponent => {
                    this.MDComponent = MDComponent;
                }, "aria-controls": props.helperText && `${props.id}-helper-text` })),
            props.helperText && (h(HelperText, Object.assign({ id: `${props.id}-helper-text` }, helperTextProps), props.helperText)))) : (h(TextFieldInput, Object.assign({}, props, { className: className, outerStyle: outerStyle, onInit: MDComponent => {
                this.MDComponent = MDComponent;
            } })));
    }
}
TextField.uidCounter = 0;
//# sourceMappingURL=index.js.map